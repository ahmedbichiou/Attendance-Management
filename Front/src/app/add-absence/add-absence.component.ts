import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { AbsenceService } from '../services/absence.service';
import { Absence, Statut } from '../models/Absence';
import { EtudiantService } from '../services/etudiant.service';
import { Etudiant } from '../models/Etudiant';

@Component({
  selector: 'app-add-absence',
  templateUrl: './add-absence.component.html',
  styleUrls: ['./add-absence.component.scss']
})
export class AddAbsenceComponent implements OnInit {

  reason: string = '';
  status: Statut = Statut.JUSTIFIEE; // Default status
  studentId: number = 0;
  idsession: number = 0;
  etudiant: Etudiant | undefined; // Define a variable to hold the etudiant information

  constructor(
    private route: ActivatedRoute, 
    private absenceService: AbsenceService,
    private etudiantService: EtudiantService // Inject the EtudiantService
  ) { }

  ngOnInit(): void {
    // Get the student ID from the route parameters
    this.route.paramMap.subscribe(params => {
      const studentId = params.get('studentId'); // Use the correct parameter name
      if (studentId) {
        this.studentId = parseInt(studentId, 10); // Parse the studentId if it's not null
        console.log('Student ID:', this.studentId); // Log the studentId
        // Fetch the student information
        this.etudiantService.getEtudiantById(this.studentId).subscribe(
          (etudiant: Etudiant) => {
            this.etudiant = etudiant; // Assign the fetched etudiant to the variable
            console.log('Etudiant:', this.etudiant); // Log the etudiant information
          },
          (error) => {
            console.error('Error fetching etudiant:', error);
          }
        );
      }
    });
  }

  onSubmit(): void {
    // Create a new absence object using the form data
    /*const newAbsence: Absence = new Absence(
      0, // idAbsence is generated by the server, so we don't need to provide it here
      this.studentId,
      this.idsession, // idsession can be set based on your requirements
      this.reason,
      this.status
    );

    // Call the absence service to create the absence
    this.absenceService.createAbsence(newAbsence).subscribe(
      (response: Absence) => {
        console.log('Absence added successfully:', response);
        // Optionally, you can navigate to another page or perform any other action after adding the absence
      },
      (error) => {
        console.error('Error adding absence:', error);
      }
    );*/
  }
}
